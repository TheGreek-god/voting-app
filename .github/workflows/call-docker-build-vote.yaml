name: Build and Deploy Vote Service

on:
  workflow_dispatch:
  push:
    paths:
      - 'vote/**'
      - '.github/workflows/call-docker-build-vote.yaml'
  pull_request:
    paths:
      - 'vote/**'
      - '.github/workflows/call-docker-build-vote.yaml'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx (for multi-platform support)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Docker Hub (or your preferred Docker registry)
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Build and push the Docker image for the vote service
      - name: Build and push Vote image
        run: |
          docker build -t greekgod659/voting-app-vote:latest ./vote
          docker push greekgod659/voting-app-vote:latest

      # Step 5: Set up Minikube context (using Minikube's kubeconfig)
      - name: Set up Minikube context
        run: |
          minikube start
          kubectl config use-context minikube

      # Step 6: Deploy the Vote Service to Minikube
      - name: Deploy Vote Service to Minikube
        run: |
          kubectl apply -f k8s-specifications/vote-deployment.yaml
          kubectl apply -f k8s-specifications/vote-service.yaml

      # Step 7: Update Vote Service environment to point to Redis
      - name: Set environment variables for Vote service
        run: |
          kubectl set env deployment/vote REDIS_HOST=redis

      # Step 8: Verify that the Vote Service is running
      - name: Verify Kubernetes Deployment for Vote
        run: |
          kubectl rollout status deployment/vote
          kubectl get pods
          kubectl get svc

      # Step 9: Expose the Vote Service via Minikube
      - name: Expose the Vote Service using Minikube
        run: |
          minikube service list
          
        # Optionally capture the URL output into a variable if needed
        id: expose-service

      # Step 10: Output the URL of the service
      - name: Output Vote Service URL
        run: |
          echo "The Vote Service is available at ${{ steps.expose-service.outputs.url }}"
