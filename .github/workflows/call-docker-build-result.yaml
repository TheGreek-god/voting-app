name: Build and Deploy Result Service

on:
  push:
    paths:
      - 'result/**'
      - '.github/workflows/call-docker-build-result.yaml'
  pull_request:
    paths:
      - 'result/**'
      - '.github/workflows/call-docker-build-result.yaml'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx (for multi-platform support)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Docker Hub (or your preferred Docker registry)
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Build and push the Docker image for the result service
      - name: Build and push Result image
        run: |
          docker build -t yourdockerhubusername/voting-app-result:latest ./result
          docker push yourdockerhubusername/voting-app-result:latest

      # Step 5: Set up Minikube context (using Minikube's kubeconfig)
      - name: Set up Minikube context
        run: |
          minikube start
          kubectl config use-context minikube

      # Step 6: Deploy the Result Service to Minikube
      - name: Deploy Result Service to Minikube
        run: |
          kubectl apply -f k8s-specifications/result-deployment.yaml
          kubectl apply -f k8s-specifications/result-service.yaml

      # Step 7: Update Result Service environment to point to PostgreSQL
      - name: Set environment variables for Result service
        run: |
          kubectl set env deployment/result POSTGRES_HOST=postgres POSTGRES_USER=admin POSTGRES_PASSWORD=password POSTGRES_DB=voting_app

      # Step 8: Verify that the Result Service is running
      - name: Verify Kubernetes Deployment for Result
        run: |
          kubectl rollout status deployment/result
          kubectl get pods
          kubectl get svc

