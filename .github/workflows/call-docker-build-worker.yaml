name: Build and Deploy Worker Service

on:

  # This triggers the workflow on a manual trigger
  workflow_dispatch:
  
  push:
    paths:
      - 'worker/**'
      - '.github/workflows/call-docker-build-worker.yaml'
  pull_request:
    paths:
      - 'worker/**'
      - '.github/workflows/call-docker-build-worker.yaml'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx (for multi-platform support)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Docker Hub (or your preferred Docker registry)
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Build and push the Docker image for the worker service
      - name: Build and push Worker image
        run: |
          docker build -t ygreekgod659/voting-app-worker:latest ./worker
          docker push greekgod659/voting-app-worker:latest

      # Step 5: Set up Minikube context (using Minikube's kubeconfig)
      - name: Set up Minikube context
        run: |
          minikube start
          kubectl config use-context minikube

      # Step 6: Deploy the Worker Service to Minikube
      - name: Deploy Worker Service to Minikube
        run: |
          kubectl apply -f k8s-specifications/worker-deployment.yaml
          kubectl apply -f k8s-specifications/worker-service.yaml

      # Step 7: Update Worker Service environment to point to Redis and PostgreSQL
      - name: Set environment variables for Worker service
        run: |
          kubectl set env deployment/worker POSTGRES_HOST=postgres POSTGRES_USER=admin POSTGRES_PASSWORD=password POSTGRES_DB=voting_app REDIS_HOST=redis

      # Step 8: Verify that the Worker Service is running
      - name: Verify Kubernetes Deployment for Worker
        run: |
          kubectl rollout status deployment/worker
          kubectl get pods
          kubectl get svc
